ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
lunches <- read.csv("lunches.csv")
lunches$End.Date <- as.character(lunches$End.Date)
lunches$End.Date <- as.Date(lunches$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- lunches$Monday[(length(lunches$Monday)-15):length(lunches$Monday)]
tuesday <- lunches$Tuesday[(length(lunches$Tuesday)-15):length(lunches$Tuesday)]
wednesday <- lunches$Wednesday[(length(lunches$Wednesday)-15):length(lunches$Wednesday)]
thursday <- lunches$Thursday[(length(lunches$Thursday)-15):length(lunches$Thursday)]
friday <- lunches$Friday[(length(lunches$Friday)-15):length(lunches$Friday)]
saturday <- lunches$Saturday[(length(lunches$Saturday)-15):length(lunches$Saturday)]
sunday <- lunches$Sunday[(length(lunches$Sunday)-15):length(lunches$Sunday)]
week <- lunches$Week.Total[(length(lunches$Week.Total)-15):length(lunches$Week.Total)]
## Calculating lower confidence limit of each day of the week ============================
mon_lcl <- mean(monday)-qt(0.975, df=15)*sd(monday)/sqrt(16)
tue_lcl <- mean(tuesday)-qt(0.975, df=15)*sd(tuesday)/sqrt(16)
wed_lcl <- mean(wednesday)-qt(0.975, df=15)*sd(wednesday)/sqrt(16)
thu_lcl <- mean(thursday)-qt(0.975, df=15)*sd(thursday)/sqrt(16)
fri_lcl <- mean(friday)-qt(0.975, df=15)*sd(friday)/sqrt(16)
sat_lcl <- mean(saturday)-qt(0.975, df=15)*sd(saturday)/sqrt(16)
sun_lcl <- mean(sunday)-qt(0.975, df=15)*sd(sunday)/sqrt(16)
lcl_week <- mean(week)-qt(0.975, df=15)*sd(week)/sqrt(16)
print (lcl_week)
## Check of weekly LCL ===================================================================
week_chk <- sum(week > lcl_week)/16
print (week_chk)
## Create a line chart of the last 16 weeks of revenue===================================
last16 <- lunches[(length(lunches$Monday)-15):length(lunches$Monday),]
ggplot(data = last16, aes(x = End.Date, y = Week.Total)) + geom_line()
## Created a barplot of the averages of each day and week==================================
daily_means <- c(mean(monday), mean(tuesday), mean(wednesday), mean(thursday), mean(friday), mean(saturday), mean(sunday))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
names(daily_means) <- weekdays
barplot(daily_means, ylim = c(0, (max(daily_means)+50)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
barplot(week, ylim = c(0, (max(week)+500)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
## Creating the yearly revenue estimate based on the LCL of each week=====================
yearly_lcl_estimate <- lcl_week * 52
print(yearly_lcl_estimate)
## Melting and graphing data by day ======================================================
length <- length(lunches$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- lunches$End.Date[(length(lunches$End.Date)-15):length(lunches$End.Date)]
ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
View(last16_melted)
ggplot(data = last16_melted, aes(x = Variable, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
ggplot(data = last16_melted, aes(x = variable, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
## Melting and graphing data by day ======================================================
length <- length(lunches$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- lunches$End.Date[(length(lunches$End.Date)-15):length(lunches$End.Date)]
ggplot(data = last16_melted, aes(x = variable, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
lunches <- read.csv("lunches.csv")
lunches$End.Date <- as.character(lunches$End.Date)
lunches$End.Date <- as.Date(lunches$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- lunches$Monday[(length(lunches$Monday)-15):length(lunches$Monday)]
tuesday <- lunches$Tuesday[(length(lunches$Tuesday)-15):length(lunches$Tuesday)]
wednesday <- lunches$Wednesday[(length(lunches$Wednesday)-15):length(lunches$Wednesday)]
thursday <- lunches$Thursday[(length(lunches$Thursday)-15):length(lunches$Thursday)]
friday <- lunches$Friday[(length(lunches$Friday)-15):length(lunches$Friday)]
saturday <- lunches$Saturday[(length(lunches$Saturday)-15):length(lunches$Saturday)]
sunday <- lunches$Sunday[(length(lunches$Sunday)-15):length(lunches$Sunday)]
week <- lunches$Week.Total[(length(lunches$Week.Total)-15):length(lunches$Week.Total)]
## Calculating lower confidence limit of each day of the week ============================
mon_lcl <- mean(monday)-qt(0.975, df=15)*sd(monday)/sqrt(16)
tue_lcl <- mean(tuesday)-qt(0.975, df=15)*sd(tuesday)/sqrt(16)
wed_lcl <- mean(wednesday)-qt(0.975, df=15)*sd(wednesday)/sqrt(16)
thu_lcl <- mean(thursday)-qt(0.975, df=15)*sd(thursday)/sqrt(16)
fri_lcl <- mean(friday)-qt(0.975, df=15)*sd(friday)/sqrt(16)
sat_lcl <- mean(saturday)-qt(0.975, df=15)*sd(saturday)/sqrt(16)
sun_lcl <- mean(sunday)-qt(0.975, df=15)*sd(sunday)/sqrt(16)
lcl_week <- mean(week)-qt(0.975, df=15)*sd(week)/sqrt(16)
print (lcl_week)
## Check of weekly LCL ===================================================================
week_chk <- sum(week > lcl_week)/16
print (week_chk)
## Create a line chart of the last 16 weeks of revenue===================================
last16 <- lunches[(length(lunches$Monday)-15):length(lunches$Monday),]
ggplot(data = last16, aes(x = End.Date, y = Week.Total)) + geom_line()
## Created a barplot of the averages of each day and week==================================
daily_means <- c(mean(monday), mean(tuesday), mean(wednesday), mean(thursday), mean(friday), mean(saturday), mean(sunday))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
names(daily_means) <- weekdays
barplot(daily_means, ylim = c(0, (max(daily_means)+50)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
barplot(week, ylim = c(0, (max(week)+500)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
## Creating the yearly revenue estimate based on the LCL of each week=====================
yearly_lcl_estimate <- lcl_week * 52
print(yearly_lcl_estimate)
## Melting and graphing data by day ======================================================
length <- length(lunches$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- lunches$End.Date[(length(lunches$End.Date)-15):length(lunches$End.Date)]
ggplot(data = last16_melted, aes(x = variable, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
View(last16_melted)
ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
lunches <- read.csv("lunches.csv")
lunches$End.Date <- as.character(lunches$End.Date)
lunches$End.Date <- as.Date(lunches$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- lunches$Monday[(length(lunches$Monday)-15):length(lunches$Monday)]
tuesday <- lunches$Tuesday[(length(lunches$Tuesday)-15):length(lunches$Tuesday)]
wednesday <- lunches$Wednesday[(length(lunches$Wednesday)-15):length(lunches$Wednesday)]
thursday <- lunches$Thursday[(length(lunches$Thursday)-15):length(lunches$Thursday)]
friday <- lunches$Friday[(length(lunches$Friday)-15):length(lunches$Friday)]
saturday <- lunches$Saturday[(length(lunches$Saturday)-15):length(lunches$Saturday)]
sunday <- lunches$Sunday[(length(lunches$Sunday)-15):length(lunches$Sunday)]
week <- lunches$Week.Total[(length(lunches$Week.Total)-15):length(lunches$Week.Total)]
## Calculating lower confidence limit of each day of the week ============================
mon_lcl <- mean(monday)-qt(0.975, df=15)*sd(monday)/sqrt(16)
tue_lcl <- mean(tuesday)-qt(0.975, df=15)*sd(tuesday)/sqrt(16)
wed_lcl <- mean(wednesday)-qt(0.975, df=15)*sd(wednesday)/sqrt(16)
thu_lcl <- mean(thursday)-qt(0.975, df=15)*sd(thursday)/sqrt(16)
fri_lcl <- mean(friday)-qt(0.975, df=15)*sd(friday)/sqrt(16)
sat_lcl <- mean(saturday)-qt(0.975, df=15)*sd(saturday)/sqrt(16)
sun_lcl <- mean(sunday)-qt(0.975, df=15)*sd(sunday)/sqrt(16)
lcl_week <- mean(week)-qt(0.975, df=15)*sd(week)/sqrt(16)
print (lcl_week)
## Check of weekly LCL ===================================================================
week_chk <- sum(week > lcl_week)/16
print (week_chk)
## Create a line chart of the last 16 weeks of revenue===================================
last16 <- lunches[(length(lunches$Monday)-15):length(lunches$Monday),]
ggplot(data = last16, aes(x = End.Date, y = Week.Total)) + geom_line()
## Created a barplot of the averages of each day and week==================================
daily_means <- c(mean(monday), mean(tuesday), mean(wednesday), mean(thursday), mean(friday), mean(saturday), mean(sunday))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
names(daily_means) <- weekdays
barplot(daily_means, ylim = c(0, (max(daily_means)+50)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
barplot(week, ylim = c(0, (max(week)+500)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
## Creating the yearly revenue estimate based on the LCL of each week=====================
yearly_lcl_estimate <- lcl_week * 52
print(yearly_lcl_estimate)
## Melting and graphing data by day ======================================================
length <- length(lunches$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- lunches$End.Date[(length(lunches$End.Date)-15):length(lunches$End.Date)]
ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
barplot(week, ylim = c(0, (max(week)+500)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
barplot(daily_means, ylim = c(0, (max(daily_means)+50)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
(max(daily_means)+50)
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
lunches <- read.csv("lunches.csv")
lunches$End.Date <- as.character(lunches$End.Date)
lunches$End.Date <- as.Date(lunches$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- lunches$Monday[(length(lunches$Monday)-15):length(lunches$Monday)]
tuesday <- lunches$Tuesday[(length(lunches$Tuesday)-15):length(lunches$Tuesday)]
wednesday <- lunches$Wednesday[(length(lunches$Wednesday)-15):length(lunches$Wednesday)]
thursday <- lunches$Thursday[(length(lunches$Thursday)-15):length(lunches$Thursday)]
friday <- lunches$Friday[(length(lunches$Friday)-15):length(lunches$Friday)]
saturday <- lunches$Saturday[(length(lunches$Saturday)-15):length(lunches$Saturday)]
sunday <- lunches$Sunday[(length(lunches$Sunday)-15):length(lunches$Sunday)]
week <- lunches$Week.Total[(length(lunches$Week.Total)-15):length(lunches$Week.Total)]
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
lunches <- read.csv("lunches.csv")
lunches$End.Date <- as.character(lunches$End.Date)
lunches$End.Date <- as.Date(lunches$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- lunches$Monday[(length(lunches$Monday)-15):length(lunches$Monday)]
tuesday <- lunches$Tuesday[(length(lunches$Tuesday)-15):length(lunches$Tuesday)]
wednesday <- lunches$Wednesday[(length(lunches$Wednesday)-15):length(lunches$Wednesday)]
thursday <- lunches$Thursday[(length(lunches$Thursday)-15):length(lunches$Thursday)]
friday <- lunches$Friday[(length(lunches$Friday)-15):length(lunches$Friday)]
saturday <- lunches$Saturday[(length(lunches$Saturday)-15):length(lunches$Saturday)]
sunday <- lunches$Sunday[(length(lunches$Sunday)-15):length(lunches$Sunday)]
week <- lunches$Week.Total[(length(lunches$Week.Total)-15):length(lunches$Week.Total)]
## Calculating lower confidence limit of each day of the week ============================
mon_lcl <- mean(monday)-qt(0.975, df=15)*sd(monday)/sqrt(16)
tue_lcl <- mean(tuesday)-qt(0.975, df=15)*sd(tuesday)/sqrt(16)
wed_lcl <- mean(wednesday)-qt(0.975, df=15)*sd(wednesday)/sqrt(16)
thu_lcl <- mean(thursday)-qt(0.975, df=15)*sd(thursday)/sqrt(16)
fri_lcl <- mean(friday)-qt(0.975, df=15)*sd(friday)/sqrt(16)
sat_lcl <- mean(saturday)-qt(0.975, df=15)*sd(saturday)/sqrt(16)
sun_lcl <- mean(sunday)-qt(0.975, df=15)*sd(sunday)/sqrt(16)
lcl_week <- mean(week)-qt(0.975, df=15)*sd(week)/sqrt(16)
print (lcl_week)
## Check of weekly LCL ===================================================================
week_chk <- sum(week > lcl_week)/16
print (week_chk)
## Create a line chart of the last 16 weeks of revenue===================================
last16 <- lunches[(length(lunches$Monday)-15):length(lunches$Monday),]
ggplot(data = last16, aes(x = End.Date, y = Week.Total)) + geom_line()
## Created a barplot of the averages of each day and week==================================
daily_means <- c(mean(monday), mean(tuesday), mean(wednesday), mean(thursday), mean(friday), mean(saturday), mean(sunday))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
names(daily_means) <- weekdays
barplot(daily_means, ylim = c(0, (max(daily_means)+50)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
barplot(week, ylim = c(0, (max(week)+500)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
## Creating the yearly revenue estimate based on the LCL of each week=====================
yearly_lcl_estimate <- lcl_week * 52
print(yearly_lcl_estimate)
## Melting and graphing data by day ======================================================
length <- length(lunches$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- lunches$End.Date[(length(lunches$End.Date)-15):length(lunches$End.Date)]
ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
evenings <- read.csv("evenings.csv")
evenings$End.Date <- as.character(evenings$End.Date)
evenings$End.Date <- as.Date(evenings$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- evenings$Monday[(length(evenings$Monday)-15):length(evenings$Monday)]
tuesday <- evenings$Tuesday[(length(evenings$Tuesday)-15):length(evenings$Tuesday)]
wednesday <- evenings$Wednesday[(length(evenings$Wednesday)-15):length(evenings$Wednesday)]
thursday <- evenings$Thursday[(length(evenings$Thursday)-15):length(evenings$Thursday)]
friday <- evenings$Friday[(length(evenings$Friday)-15):length(evenings$Friday)]
saturday <- evenings$Saturday[(length(evenings$Saturday)-15):length(evenings$Saturday)]
sunday <- evenings$Sunday[(length(evenings$Sunday)-15):length(evenings$Sunday)]
week <- evenings$Week.Total[(length(evenings$Week.Total)-15):length(evenings$Week.Total)]
## Calculating lower confidence limit of each day of the week ============================
mon_lcl <- mean(monday)-qt(0.975, df=15)*sd(monday)/sqrt(16)
tue_lcl <- mean(tuesday)-qt(0.975, df=15)*sd(tuesday)/sqrt(16)
wed_lcl <- mean(wednesday)-qt(0.975, df=15)*sd(wednesday)/sqrt(16)
thu_lcl <- mean(thursday)-qt(0.975, df=15)*sd(thursday)/sqrt(16)
fri_lcl <- mean(friday)-qt(0.975, df=15)*sd(friday)/sqrt(16)
sat_lcl <- mean(saturday)-qt(0.975, df=15)*sd(saturday)/sqrt(16)
sun_lcl <- mean(sunday)-qt(0.975, df=15)*sd(sunday)/sqrt(16)
lcl_week <- mean(week)-qt(0.975, df=15)*sd(week)/sqrt(16)
print (lcl_week)
## Check of weekly LCL ===================================================================
week_chk <- sum(week > lcl_week)/16
print (week_chk)
## Create a line chart of the last 16 weeks of revenue===================================
last16 <- evenings[(length(evenings$Monday)-15):length(evenings$Monday),]
ggplot(data = last16, aes(x = End.Date, y = Week.Total)) + geom_line()
## Created a barplot of the averages of each day and week==================================
daily_means <- c(mean(monday), mean(tuesday), mean(wednesday), mean(thursday), mean(friday), mean(saturday), mean(sunday))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
names(daily_means) <- weekdays
barplot(daily_means, ylim = c(0, (max(daily_means)+500)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
barplot(week, ylim = c(0, (max(week)+1000)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
## Creating the yearly revenue estimate based on the LCL of each week=====================
yearly_lcl_estimate <- lcl_week * 52
print(yearly_lcl_estimate)
## Melting and graphing data by day ======================================================
length <- length(evenings$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- evenings$End.Date[(length(evenings$End.Date)-15):length(evenings$End.Date)]
ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
evenings <- read.csv("evenings.csv")
evenings$End.Date <- as.character(evenings$End.Date)
evenings$End.Date <- as.Date(evenings$End.Date, "%m/%d/%Y")
## Pulling the last 16 weeks revenues for each day individually===========================
monday <- evenings$Monday[(length(evenings$Monday)-15):length(evenings$Monday)]
tuesday <- evenings$Tuesday[(length(evenings$Tuesday)-15):length(evenings$Tuesday)]
wednesday <- evenings$Wednesday[(length(evenings$Wednesday)-15):length(evenings$Wednesday)]
thursday <- evenings$Thursday[(length(evenings$Thursday)-15):length(evenings$Thursday)]
friday <- evenings$Friday[(length(evenings$Friday)-15):length(evenings$Friday)]
saturday <- evenings$Saturday[(length(evenings$Saturday)-15):length(evenings$Saturday)]
sunday <- evenings$Sunday[(length(evenings$Sunday)-15):length(evenings$Sunday)]
week <- evenings$Week.Total[(length(evenings$Week.Total)-15):length(evenings$Week.Total)]
## Calculating lower confidence limit of each day of the week ============================
mon_lcl <- mean(monday)-qt(0.975, df=15)*sd(monday)/sqrt(16)
tue_lcl <- mean(tuesday)-qt(0.975, df=15)*sd(tuesday)/sqrt(16)
wed_lcl <- mean(wednesday)-qt(0.975, df=15)*sd(wednesday)/sqrt(16)
thu_lcl <- mean(thursday)-qt(0.975, df=15)*sd(thursday)/sqrt(16)
fri_lcl <- mean(friday)-qt(0.975, df=15)*sd(friday)/sqrt(16)
sat_lcl <- mean(saturday)-qt(0.975, df=15)*sd(saturday)/sqrt(16)
sun_lcl <- mean(sunday)-qt(0.975, df=15)*sd(sunday)/sqrt(16)
lcl_week <- mean(week)-qt(0.975, df=15)*sd(week)/sqrt(16)
print (lcl_week)
## Check of weekly LCL ===================================================================
week_chk <- sum(week > lcl_week)/16
print (week_chk)
## Create a line chart of the last 16 weeks of revenue===================================
last16 <- evenings[(length(evenings$Monday)-15):length(evenings$Monday),]
ggplot(data = last16, aes(x = End.Date, y = Week.Total)) + geom_line()
## Created a barplot of the averages of each day and week==================================
daily_means <- c(mean(monday), mean(tuesday), mean(wednesday), mean(thursday), mean(friday), mean(saturday), mean(sunday))
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
names(daily_means) <- weekdays
barplot(daily_means, ylim = c(0, (max(daily_means)+500)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Revenue", main = "Average Daily Revenue, Prior 16 Weeks")
barplot(week, ylim = c(0, (max(week)+1000)), col = rainbow(25), xlab = "Last 16 Weeks",
ylab = "Revenues", main = "Last 16 Weeks of Revenue")
## Creating the yearly revenue estimate based on the LCL of each week=====================
yearly_lcl_estimate <- lcl_week * 52
print(yearly_lcl_estimate)
## Melting and graphing data by day ======================================================
length <- length(evenings$End.Date)
last16_melted <- melt(last16)
last16_melted <- last16_melted[1:112,]
last16_melted[,3] <- evenings$End.Date[(length(evenings$End.Date)-15):length(evenings$End.Date)]
ggplot(data = last16_melted, aes(x = V3, y = value, col = variable)) + geom_point() + facet_wrap(~ variable) + geom_smooth(method="lm")
subsets
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
library("plyr", lib.loc="~/R/win-library/3.1")
library("WriteXLS", lib.loc="~/R/win-library/3.1")
## Import the sales item file and prepare for analysis
prep <- read.csv("Items Sold - Nov '14 - Feb '15.csv")
prep[,1] <- as.character(prep[,1])
prep[,1] <- as.Date(prep[,1], "%m/%d/%Y")
prep[,18] <- weekdays(as.Date(prep[,1]))
prep[,1] <- NULL
prep.melted <- melt(prep)
subsets <- split(prep, prep[,17], drop=TRUE)
friday <- subsets[[1]]
monday <- subsets[[2]]
saturday <- subsets[[3]]
sunday <- subsets[[4]]
thursday <- subsets[[5]]
tuesday <- subsets[[6]]
wednesday <- subsets[[7]]
## Analysis of friday
n <- 21
friday[,17] <- NULL
mean<-colMeans (friday, na.rm = FALSE, dims = 1)
sd<- apply(friday, 2, sd)
confidence <- qt(.95, df=20)* (sd/sqrt(21))
friday[22,] <- mean + confidence
write.csv(friday, "friday.csv")
## Analysis of Monday
n <- 21
monday[,17] <- NULL
mean<-colMeans (monday, na.rm = FALSE, dims = 1)
sd<- apply(monday, 2, sd)
confidence <- qt(.95, df=20)* (sd/sqrt(21))
monday[22,] <- mean + confidence
## Analysis of Tuesday
n <- 17
tuesday[,17] <- NULL
mean<-colMeans (tuesday, na.rm = FALSE, dims = 1)
sd<- apply(tuesday, 2, sd)
confidence <- qt(.95, df=16)* (sd/sqrt(17))
tuesday[18,] <- mean + confidence
## Analysis of wednesday
n <- 17
wednesday[,17] <- NULL
mean<-colMeans (wednesday, na.rm = FALSE, dims = 1)
sd<- apply(wednesday, 2, sd)
confidence <- qt(.95, df=16)* (sd/sqrt(17))
wednesday[18,] <- mean + confidence
##Analysis of Thursday
n <- 17
thursday[,17] <- NULL
mean<-colMeans (thursday, na.rm = FALSE, dims = 1)
sd<- apply(thursday, 2, sd)
confidence <- qt(.95, df=16)* (sd/sqrt(17))
thursday[18,] <- mean + confidence
##Analysis of Saturday
n <- 22
saturday[,17] <- NULL
mean<-colMeans (saturday, na.rm = FALSE, dims = 1)
sd<- apply(saturday, 2, sd)
confidence <- qt(.95, df=21)* (sd/sqrt(22))
saturday[23,] <- mean + confidence
write.csv(saturday, "saturday.csv")
##Analysis of Sunday
n <- 22
sunday[,17] <- NULL
mean<-colMeans (sunday, na.rm = FALSE, dims = 1)
sd<- apply(sunday, 2, sd)
confidence <- qt(.95, df=21)* (sd/sqrt(22))
sunday[23,] <- mean + confidence
write.csv(sunday, "sunday.csv")
subsets
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
## Import the Evening file and prepare for analysis ======================================
evenings <- read.csv("delivery.csv")
View(evenings)
View(evenings)
delivery$Date <- as.character(delivery$Date)
delivery$Date <- as.Date(delivery$Date, "%m/%d/%Y")
delivery <- read.csv("delivery.csv")
delivery$Date <- as.character(delivery$Date)
delivery$Date <- as.Date(delivery$Date, "%m/%d/%Y")
View(delivery)
delivery[,3] <- weekdays(as.Date(delivery[,1]))
View(evenings)
View(delivery)
?aggregate
aggregate(delivery~V3, FUN=mean)
aggregate(delivery~Monday, FUN=mean)
tapply(delivery$Qty, delivery$V3, mean)
meandl <- tapply(delivery$Qty, delivery$V3, mean)
barplot(meandl, ylim = c(0, (max(meandl)+5)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Deliveries", main = "Q1 average deliveries")
print(levels(meandl))
meandl <- meandl[order(DoW)]
meandl[sort(order(DoW))]
meandl <- c(meandl[2], meandl[6], meandl[7], meandl[5], meandl[1,], meandl[3], meandl[4])
meandl[1]
meandl <- c(meandl[2], meandl[6], meandl[7], meandl[5], meandl[1], meandl[3], meandl[4])
meandl
barplot(meandl, ylim = c(0, (max(meandl)+5)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Deliveries", main = "Q1 average deliveries")
delivery[,4] <- rep(1:7, each=16)
delivery[1:110,4] <- rep(1:7, each=15)
delivery[1:105,4] <- rep(1:7, each=15)
View(delivery)
delivery[106:110] <- rep(8)
delivery[106:110,4] <- rep(8)
View(delivery)
delivery[1:105,4] <- rep(1:15, each=7)
View(evenings)
View(delivery)
## Clean up the working Environment =======================================================
rm(list = ls())
gc()
library(ggplot2)
library(reshape2)
delivery <- read.csv("delivery.csv")
delivery$Date <- as.character(delivery$Date)
delivery$Date <- as.Date(delivery$Date, "%m/%d/%Y")
delivery[,3] <- weekdays(as.Date(delivery[,1]))
meandl <- tapply(delivery$Qty, delivery$V3, mean)
meandl <- c(meandl[2], meandl[6], meandl[7], meandl[5], meandl[1], meandl[3], meandl[4])
barplot(meandl, ylim = c(0, (max(meandl)+5)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Deliveries", main = "Q1 average deliveries")
lddelivery <- read.csv("long.csv")
lddelivery$Date <- as.character(lddelivery$Date)
lddelivery$Date <- as.Date(lddelivery$Date, "%m/%d/%Y")
lddelivery[,3] <- weekdays(as.Date(lddelivery[,1]))
ldmeandl <- tapply(lddelivery$Qty, lddelivery$V3, mean)
ldmeandl <- c(meandl[2], meandl[6], meandl[7], meandl[5], meandl[1], meandl[3], meandl[4])
barplot(ldmeandl, ylim = c(0, (max(ldmeandl)+5)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average Deliveries", main = "Q1 average deliveries")
lddelivery <- read.csv("long.csv")
lddelivery$Date <- as.character(lddelivery$Date)
lddelivery$Date <- as.Date(lddelivery$Date, "%m/%d/%Y")
lddelivery[,3] <- weekdays(as.Date(lddelivery[,1]))
ldmeandl <- tapply(lddelivery$Qty, lddelivery$V3, mean)
ldmeandl
ldmeandl <- c(ldmeandl[2], ldmeandl[6], ldmeandl[7], ldmeandl[5], ldmeandl[1], ldmeandl[3], ldmeandl[4])
ldmeandl
barplot(ldmeandl, ylim = c(0, (max(ldmeandl)+5)), col = rainbow(7),
xlab = "Days of the Week", ylab = "Average  Long Distance Deliveries", main = "Q1 Average Long Distance Deliveries")
View(lddelivery)
week(delivery$Date)
library(lubridate)
install.packages("lubridate")
library(lubridate)
week(delivery$Date)
delivery[,4] <- week(delivery$Date)
View(delivery)
delbyweek <- tapply(delivery$Qty, delivery$v4, sum)
View(delivery)
delbyweek <- tapply(delivery$Qty, delivery$V4, sum)
delbyweek
barplot(delbyweek[1:12], ylim = c(0, (max(meandl)+5)), col = rainbow(7),
xlab = "Weeks since Jan 1, 2015", ylab = "Deliveries", main = "Q1 Deliveries by Week")
barplot(delbyweek[1:12], ylim = c(0, (max(delbyweek)+5)), col = rainbow(7),
xlab = "Weeks since Jan 1, 2015", ylab = "Deliveries", main = "Q1 Deliveries by Week")
lddelivery[,4] <- week(lddelivery$Date)
lddelbyweek <- tapply(lddelivery$Qty, lddelivery$V4, sum)
barplot(lddelbyweek[1:12], ylim = c(0, (max(lddelbyweek)+5)), col = rainbow(7),
xlab = "Weeks since Jan 1, 2015", ylab = "Long Distance Deliveries", main = "Q1 Long Distance Deliveries by Week")
