install.packages("swirl")
library("swirl", lib.loc="~/R/win-library/3.1")
Swirl()
swirl()
swirl()
5+7
x <- 5+7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- my_sqrt / z
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0.10,100)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
play()
ls()
nxt()
ls()
list.file()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
?dir.create
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists(mytest.R)
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R","mytest3.R")
wd()+ "/mytest3.R"
wd()
getwd()+ "/mytest3.R"
old.dir+ "/mytest3.R"
old.dir + "/mytest3.R"
?append
paste(getwd(), "/mytest3.R")
file.path("mytest3.R")
dir.create("testdir2/testdir3")
info()
?dir.create
dir.create("testdir2/testdir3", recursive = TRUE)
?dir
?dir.remove
?dir.delete
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
wd(old.dir)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
play()
?t.test
t.test(my_div)
nxt()
?:
?':'
seq(1,20)
seq(0,10 by=0.5)
seq(0,10, by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
?seq_along
seq_along(my_sqrt)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
bye()
swirl()
(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Chris")
my_name
paste(my_char, collapse = " ")
paste(my_mame, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
LETTERS
paste(LETTERS, 1:4, sep = "-")
swirl
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- samples(c(y,z))
my_data <- sample(c(y,z))
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
bye()
diamonds
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.1")
diamonds
diamonds <- diamonds
View(diamonds)
t.test(diamonds$price)
qplot(diamonds)
qplot(diamonds$carat)
hist(diamonds$carat)
summary(diamonds)
cut <- summary(diamonds$cut)
cut
plot(cut)
?cor
cor(diamonds$carat, diamonds$price)
?plot
?qplot
qplot(diamonds$carat, diamonds$price)
qplot(diamonds$carat, diamonds$price, facets = cut)
qplot(diamonds$carat, diamonds$price, facets = diamonds$cut)
plot(diamonds$carat, diamonds$price, facets = diamonds$cut)
ggplot(diamonds$carat, diamonds$price)
ggplot(diamonds$carat, diamonds$price) + geom_point()
ggplot(diamonds, aes(carat,price)) + geom_point()
plot <- ggplot(diamonds, aes(carat,price)) + geom_point()
plot + facet_grid(.~ cut)
plot + facet_grid(color ~ cut)
summary(dimonds$price)
summary(diamonds$price)
prices <- diamonds$price > 2000
prices
sum(prices)
ggplot(diamonds$price) + geom_boxplot()
ggplot(diamonds aes(price) + geom_boxplot()
ggplot(diamonds, aes(price) + geom_boxplot()
ggplot(diamonds, aes(price)) + geom_boxplot()
ggplot(diamonds, aes(price,carat)) + geom_boxplot()
ggplot(diamonds, aes(carat)) + geom_hist()
ggplot(diamonds, aes(carat)) + geom_histogram()
ggplot(diamonds, aes(price)) + geom_histogram()
plot + facet_wrap(color ~ cut)
install.packages("ggthemes")
library("ggthemes", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
plot + facet_wrap(color ~ cut) + theme_excel()
plot + facet_wrap(color ~ cut) + theme_gdocs()
plot <- ggplot(diamonds, aes(carat,price, color=carat)) + geom_point()
plot <- ggplot(diamonds, aes(carat,price, color=color)) + geom_point()
plot
plot + facet_wrap(.~ color)
plot + facet_wrap(~ color)
plot <- ggplot(diamonds, aes(carat,price, color=cut)) + geom_point()
plot + facet_wrap(~ color)
plot <- plot + facet_wrap(~ color)
plot
gc()
diamonds <- diamonds
plot <- ggplot(diamonds, aes(carat,price, color=cut)) + geom_point()
plot <- plot + facet_wrap(~ color)
plot
gc()
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x >0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x{300}
x[300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
?identical
identical(vect, vect2)
vect]"bar"
vect["bar"]
vect["foo", "bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vecto)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
gc()
setwd("C:/ACCOUNTASAURUS REX/Formaggio's/Data Analysis/2014/Q4")
rm(list = ls())
gc()
evenings <- read.csv("evenings.csv")
View(evenings)
evenings <- read.csv("evenings.csv")
View(evenings)
qplot(evenings$Monday, evenings$ End.Date)
class(evenings$end.date)
describe(evenings$End.Date)
class(evenings$End.Date)
evenings$End.Date <- as.dates(evenings$End.Date, "%m/%d/%y")
evenings$End.Date <- as.Date(evenings$End.Date, "%m/%d/%y")
View(evenings)
evenings <- read.csv("evenings.csv")
View(evenings)
as.char(evenings$End.Date)
as.character(evenings$End.Date)
evenings$End.Date <- as.character(evenings$End.Date)
evenings$End.Date <- as.Date(evenings$End.Date, "%m/%d/%y")
?as.Date
evenings <- read.csv("evenings.csv")
evenings$End.Date <- as.Date(evenings$End.Date)
evenings <- read.csv("evenings.csv")
evenings$End.Date <- as.character(evenings$End.Date)
evenings$End.Date <- as.Date(evenings$End.Date, "%m/%d/%Y")
View(evenings)
